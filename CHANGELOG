CHANGELOG
=========

Version 3.3.0
Release Date: 14 Feb 2022
1. Feature: Check if any Network Managers is managing the bridge interface during setup and set it to unmanage mode. Currently supports NetworkManager.
2. Bugfix: install command should check if existing vnet has been installed on the system and recommend user to use upgrade command instead.
3. Bugfix: Fix some non-critical bugs discovered in profile manager module.

Version 3.2.6
Release Date: 21 Jun 2021
1.  Feature: Add ra-stateless for dnsmasq for DHCPv6
2.  Disabled: "restart-dhcp, -rd <profile_name>" won't work most of the time. Fix is in progress, meanwhile use restart/reload bridge to reapply dnsmasq configuration.
3.  Deprecated: "force-reload <profile_name>", is no longer necessary as the restart process will force stop all running instance(s) of the selected bridge.
4.  Feature: Restart all vnet bridges will now restores virtual interfaces that has been attached to its respective virtual bridges prior to restart.
5.  Show CHANGELOG with less instead of using cat to concatenate and print it onto the terminal.
6.  Bugfix: Update systemd script to execute (ExecReload) reload request.
7.  Changes to how default (help) message is displayed.

Version 3.2.5
Release Date: 06 Jun 2021
1. Bugfix: Fixed improper bridge setup in daemon mode due to systemd unit configuration. Removed "Want" and ammend "After" from "network-online.target" to "network.target"

Version 3.2.4
Release Date: 04 Aug 2020
1.  Feature: Implement _check_active_bridge_managed_by_vnet() to check if virtual bridge is running and is managed by vnet
2.  Deprecated: With the implementation of "1" above, decomission of variable gbltmpvnetdir and vnet shall not use "/tmp/vnet-tmp" directory from this version onwards.
3.  Feature: Implement "stop-force" command for force stop a virtual interface should it be not working.
4.  Bugfix: Interface deletion will be prompted for user's confirmation if the virtual interface has devices attached to it unless "stop" command is called by systemd or "stop-force" command is issued.
5.  Deprecated: Do not delete interface if the virtual interface has devices attached to it unless unless "stop" command is called by systemd.
6.  Upgrade command shall discover the directory/path where vnet is installed at instead of prompting the default install directory.
7.  Correction on some of the message prompt(s) for the upgrade command.
8.  Bugfix: Fix bridges that has been started before vnet's systemd script that returns false as it is already running, thus causes systemd to report "status=1/FAILURE".
9.  Feature: Implement "show|show-profile|-sp" feature to display configurations of an existing profile.

Version 3.2.3
Release Date: 30 Jan 2020
1.  Creates vnet-tmp dir in global temp directory "/tmp" where all the "vnet-${VIRNET_BRIDGE}.network_up" file(s) will be stored.
2.  Re-reference all modules and scripts to point to "/tmp/vnet-tmp" via variable gbltmpvnetdir

Version 3.2.2
Release Date: 5 Jan 2020
1.  Bugfix: Typo in variable pointing dnsmasq config file.
2.  Bugfix: Profile should be able to be stopped if its running even if USE_THIS_PROFILE is set to false after it is started.
3.  Bugfix: Fix unreferenced variable on network TAP script module.
4.  Tidying up of vnet main script.

Version 3.2.1
Release Date: 4 Jan 2020
1.  Feature: Upgrade command: Only replace vnet.service file if checksum is different, and will be replaced with package version.
2.  Bugfix: MAC Address should not generate multicast address.
3.  Bugfix: Check profile file exist location syntax error.
4.  Feature: Random unicast MAC address generator menu ("vnet macgen").
5.  Bugfix: DHCP max host count won't be processed if profile is processed via systemd.
6.  Feature: Executing vnet without any argument(s) will display the instance of vnet running as Package or Tool mode.
    Package Mode: Usually downloaded from a remote repo or a zip package file and vnet is not installed onto the host
    Tool Mode: vnet script has been installed onto the host and is running from the directory registered during the setup/install process.
7.  Feature: Display list of commands available, categorized into its availabilty modes (ALL/Tool/Package).
8.  Bugfix: Some logic fixes for new/edit profile and upgrade commands.
9.  Feature: Allows reinstallation request if Package ver/mode is the same as Tool ver/mode.
10. Feature: Added command arguments --show-install-dir and --show-change to display the featured information on terminal screen.
    Details/Description of these new command arguments are described in the "list of commands available".
11. Adds a file VERSION_INFO to the exported archived with stores the version number of the tool that was used to export the profiles.

Version 3.2.0
Release Date: 1 Jan 2020
Initial Public Release
1.  Introduction of deploy wizard, to handle installation, uninstallation and upgrade requests. Upgrade feature will be implemented soon.
2.  Introduction of creating of new vnet profile via command 'vnet new' instead of manually configuration.
3.  Introduction of editing of vnet profile via command 'vnet edit' instead of manually configuration.
4.  Allows export/backup and import/restore of profile(s). 

Version 3.1.9 and before:
(latest changes listed first)
1.  Move network up empty file from exec dir to host system global temp ("/tmp") directory.
2.  Introduction of modules directory, which currently has iptables, network tap and profile manager modules.
3.  Rename config dir to profiles and thus officially supports multiple vnet(s)/bridge(s).
4.  Introduction of profile manager module to allow listing of all vnet profiles, rename, delete and edit dnsmasq settings of vnet profile.
5.  Introduction of iptables rulesets module and currently has 2 modules, bridge or isolated rulesets. Previously, rules are defined inside vnet main script file.
6.  Virtual Network here refers to bridge and vice-versa. In this documentation, virtual network shall be used instead
7.  All virtual network creation are based on config file instead of depending on both config and the shell script
8.  Shell Script is now a common platform to manage virtual network creation based on the name defined in the config file
    and thus, the shell script is now renamed as vnet ( instead of the <virtualnetworkname>-net or <bridgename>-net )
9.  All Config (.conf) files related to virtual network setup are to be stored in configstore dir located in where the shell script "vnet" is located
    a.  VirtualNet config files has a standard convention to comply with:
            i.e. <virtualnetworkname>-vnet.conf and only one such VirtualNet config file per each virtual network name is allowed.
            (for example, virtual network name virtnet will have the following filename virnet-vnet.conf
    b.  CRITICAL!! The variable VIRNET_BRIDGE defined inside VirtualNet config file must be the same as <virtualnetworkname>.
    c.  Other application based config files used by vnet script, are to be stored in this directory with the following naming convention 
            <virtualnetworkname>-vnet-<application-name>.conf 
            (for example, dnsmasq application with network name virtnet shall be named as virnet-vnet-dnsmasq.conf
    d.  Currently only dnsmasq application used by this application requires a config file.
        More applications that requires config file may be introduced in future.
    e.  Future improvement will include auto generation of <virtualnetworkname>-vnet.conf. Stay tuned.
10. In order for vnet shell script to work, the following config files is required. This list will change the script improves with more features.
    a.  <virtualnetworkname>-vnet.conf
    b   <virtualnetworkname>-vnet-dnsmasq.conf
11.  VirtualNet config file new variable `PERSISTENT="false"` has been added from version 2.1.1 and above
    This is implemented together with systemd (service) script "vnet.service" and autoproc script "vnet-autoproc" for use with the service script.
    If PERSISTENT="true", the vnet systemd (service) script will auto setup the virtual network interface the way how the user manually executes it.
12.  Manage of virtual network during system startup and shutdown using systemd
    Setup Instructions for systemd are mentioned at the beginning of "vnet.service" file.
    a.  Auto configuration of Virtual Network Adapters/Interfaces based on the value of PERSISTENT variable inside VirtualNet config files
        If PERSISTENT="true" in <virtualnetworkname>-vnet.conf, the <virtualnetworkname> will be automatically configured on startup.
        Nothing will be processed on startup if PERSISTENT="false". Thus the user has to manually configure it.
        (e.g. testvirnet-vnet.conf, testvirnet will be automatically configured on startup)
    b.  Auto deletion of Virtual Network Adapters/Intefaces on system shutdown. 
        All <virtualnetworkname>-vnet.conf inside configstore directory will be automatically processed regardless of status.
        (i.e. Even if the <virtualnetworkname> is not setup automatically or manually by the user, it will be processed as well)
13.  Version 2.2.0 addition (2018 Apr 24)
    a.  Add dnsmasq global exclude file /etc/dnsmasq.d-available/vnet-<virtualnetworkname> and 
        symlink to /etc/dnsmasq.d-available/vnet-<virtualnetworkname> from /etc/dnsmasq.d/
    b.  Auto delete vnet-<virtualnetworkname> symlink and file on shutdown (or on stop request)


== END ==
